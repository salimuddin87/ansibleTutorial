# Copyright 2018 by bad_db. All rights reserved.
# tddb CONFIDENTIAL AND TRADE SECRET

---
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Service
    metadata:
      name: consul
      namespace: AsterNamespace
      labels:
        name: consul
      annotations:
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    spec:
      # Required to make the service headless so you can address individual stateful set nodes
      clusterIP: None
      ports:
        - name: consulport
          port: 8500
      selector:
        name: consul

  - apiVersion: v1
    kind: Secret
    metadata:
      name: consul-gossip-key
      namespace: AsterNamespace
    type: Opaque
    data:
      #gossip-key: {{ randAlphaNum 24 | b64enc }}  #Use this in helm
      gossip-key: 2vKs5MvtH17mSlGv0ojHEw==

  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: consul
      namespace: AsterNamespace
      labels:
        name: consul
    spec:
      serviceName: consul
      replicas: 3
      selector:
        matchLabels:
          name: consul
      template:
        metadata:
          name: consul
          labels:
            name: consul
        spec:
          volumes:
            - name: gossip-key
              secret:
                secretName: consul-gossip-key
            - emptyDir: {}
              name: datadir
          containers:
            - name: consul
              image: docker.io/consul:1.0.0
              env:
                - name: INITIAL_CLUSTER_SIZE
                  value: "3"
                - name: STATEFULSET_NAME
                  value: consul
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: STATEFULSET_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: DNSPORT
                  value: "8600"
              ports:
                - containerPort: 8500
              volumeMounts:
                - name: gossip-key
                  mountPath: /etc/consul/secrets
                  readOnly: true
                - name: datadir
                  mountPath: "/var/lib/consul"
              command:
              - "/bin/sh"
              - "-ec"
              - |
                IP=$(hostname -i)
                if [ -e /etc/consul/secrets/gossip-key ]; then
                echo "{\"encrypt\": \"$(base64 /etc/consul/secrets/gossip-key)\",\"leave_on_terminate\":true}" > /etc/consul/encrypt.json
                GOSSIP_KEY="-config-file /etc/consul/encrypt.json"
                fi
                for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                    while true; do
                        echo "Waiting for ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME} to come up"
                        ping -W 1 -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc.cluster.local > /dev/null && break
                        sleep 1s
                    done
                done
                PEERS=""
                for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                    PEERS="${PEERS}${PEERS:+ } -retry-join $(ping -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc.cluster.local | awk -F'[()]' '/PING/{print $2}')"
                done
                exec /bin/consul agent \
                -data-dir=/var/lib/consul \
                -server \
                -bootstrap-expect=${INITIAL_CLUSTER_SIZE} \
                -bind=0.0.0.0 \
                -advertise=${POD_IP} \
                ${PEERS} \
                ${GOSSIP_KEY} \
                -client=0.0.0.0 \
                -dns-port=${DNSPORT}
