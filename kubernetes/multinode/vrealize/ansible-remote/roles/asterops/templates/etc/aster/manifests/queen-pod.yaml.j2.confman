# Copyright (c) 2018 by bad_db Corporation. All rights reserved.
# tddb CORPORATION CONFIDENTIAL AND TRADE SECRET

# Queen POD definition 

apiVersion: v1
kind: Pod
metadata:
  name: queen
  namespace: AsterNamespace
  labels:
    name: queen
spec:
  containers:
    - name: statsserver
      resources:
        requests:
          memory: "{{ REQ_MEM_STATSSERVER }}"
          cpu: "{{ REQ_CPU_STATSSERVER }}"
      image: localregistryhost:localregistryport/statsserver:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "statsserver"
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: STATS_SERVER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: STATS_UPDATE_INTERVAL_SEC
          value: "5"
      ports:
        - containerPort: 1953
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: iceserver
      resources:
        requests:
          memory: "{{ REQ_MEM_ICE }}"
          cpu: "{{ REQ_CPU_ICE }}"
      image: localregistryhost:localregistryport/ice:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "iceserver"
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      ports:
        - containerPort: 2117
        - containerPort: 2115
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
      securityContext:
        privileged: true
    - name: txman
      resources:
        requests:
          memory: "{{ REQ_MEM_TXMAN }}"
          cpu: "{{ REQ_CPU_TXMAN }}"
      image: localregistryhost:localregistryport/txman:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "txman"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
      ports:
        - containerPort: 4582
    - name: queendb
      resources:
        requests:
          memory: "{{ REQ_MEM_ARC }}"
          cpu: "{{ REQ_CPU_ARC }}"
      image: localregistryhost:localregistryport/arc:localregistrytag
      env:
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONTAINER_NAME
          value: "queenDb-0"
          # "runarc" script has a dependency on ARC_PORT value 8000
          # Changing ARC_PORT requires change to runarc script
        - name: ARC_PORT
          value: "8000"
        - name: STATS_SERVER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name:  QOS_SLAVE_EXEC_PORT
          value: "2200"
        - name: STATS_UPDATE_INTERVAL_SEC
          value: "5"
      ports:
        - containerPort: 2000
        - containerPort: 8000
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - mountPath: /home/beehive/data/queenDataDir
          name: aster-queendb
        - mountPath: /tmp
          name: local-tmp
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
      securityContext:
        privileged: true
    - name: amvdb
      resources:
        requests:
          memory: "{{ REQ_MEM_ARC }}"
          cpu: "{{ REQ_CPU_ARC }}"
      image: localregistryhost:localregistryport/arc:localregistrytag
      env:
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONTAINER_NAME
          value: "amvDb-0"
          # "runarc" script has a dependency on ARC_PORT value 8002
          # Changing ARC_PORT requires change to runarc script
        - name: ARC_PORT
          value: "8002"
      ports:
        - containerPort: 8002
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - mountPath: /home/beehive/data/workerDataDir
          name: aster-amvdb
        - mountPath: /tmp
          name: local-tmp
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
      securityContext:
        privileged: true
    - name: qosmanager
      resources:
        requests:
          memory: "{{ REQ_MEM_QOSMANAGER }}"
          cpu: "{{ REQ_CPU_QOSMANAGER }}"
      image: localregistryhost:localregistryport/qosmanager:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "qosmanager"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: STATS_SERVER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name:  QOS_SLAVE_EXEC_PORT
          value: "2200"
      ports:
        - containerPort: 2011
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: qlmmaster
      resources:
        requests:
          memory: "{{ REQ_MEM_QLMMASTER }}"
          cpu: "{{ REQ_CPU_QLMMASTER }}"
      image: localregistryhost:localregistryport/qlmmaster:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "qlmmaster"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: STATS_UPDATE_INTERVAL_SEC
          value: "5"
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: sysman
      resources:
        requests:
          memory: "{{ REQ_MEM_SYSMAN }}"
          cpu: "{{ REQ_CPU_SYSMAN }}"
      image: localregistryhost:localregistryport/sysman:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "sysman"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: STATS_SERVER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      ports:
        - containerPort: 2105
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: queenexec
      resources:
        requests:
          memory: "{{ REQ_MEM_QUEENEXEC }}"
          cpu: "{{ REQ_CPU_QUEENEXEC }}"
      image: localregistryhost:localregistryport/queenexec:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "queenexec"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      ports:
        - containerPort: 2406
        - containerPort: 2407
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - mountPath: /tmp
          name: local-tmp
        - mountPath: /dev/shm/td_qg_ipc
          name: shared-memory
        - mountPath: /var/opt/tddb/tdqg
          name: qg-var
        - mountPath: /opt/tddb/tdqg
          name: qg-opt
        - mountPath: /etc/opt/tddb/tdconfig/tdqg
          name: qg-tdconfig
        - mountPath: /tmp/hostname
          name: etc-hostname
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: procmgmt
      resources:
        requests:
          memory: "{{ REQ_MEM_PROCMGMT }}"
          cpu: "{{ REQ_CPU_PROCMGMT }}"
      image: localregistryhost:localregistryport/procmgmt:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "procmgmt"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: JAVA_HEAP_LIMIT
          value: "128m"
      ports:
        - containerPort: 1990
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: mailman
      resources:
        requests:
          memory: "{{ REQ_MEM_MAILMAN }}"
          cpu: "{{ REQ_CPU_MAILMAN }}"
      image: localregistryhost:localregistryport/mailman:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "mailman"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      ports:
        - containerPort: 2007
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: webservices
      resources:
        requests:
          memory: "{{ REQ_MEM_WEBSERVICES }}"
          cpu: "{{ REQ_CPU_WEBSERVICES }}"
      image: localregistryhost:localregistryport/webservices:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "webservices"
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONTAINER
          value: "webservices"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # ClusterIp of common heapster from kube-system
        - name: HEAPSTER_SERVICE_HOST
          value: heapster.kube-system.svc.cluster.local
        # Port Number of common heapster from kube-system
        - name: HEAPSTER_SERVICE_PORT
          value: "80"
        - name: SLM_SAMPLING_RATE
          value: "60"
      ports:
        - containerPort: 30008
        - containerPort: 30009
      volumeMounts:
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: websrv-https-credentials
          mountPath: "/home/beehive/certs"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: txmanslave
      resources:
        requests:
          memory: "{{ REQ_MEM_TXMANSLAVE }}"
          cpu: "{{ REQ_CPU_TXMANSLAVE }}"
      image: localregistryhost:localregistryport/txmanslave:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "txmanslave"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      ports:
        - containerPort: 1985
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: astershell
      resources:
        requests:
          memory: "{{ REQ_MEM_ASTERSHELL }}"
          cpu: "{{ REQ_CPU_ASTERSHELL }}"
      image: localregistryhost:localregistryport/astershell:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "astershell"
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      ports:
        - containerPort: 22
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: sshdsidecar
      image: localregistryhost:localregistryport/sshdsidecar:localregistrytag
      lifecycle:
        postStart:
          exec:
            command: ["/bin/bash", "-c", "cat /home/tdqg/.ssh/authorized_keys.d/* >> /home/tdqg/.ssh/authorized_keys; chown tdqg:querygrid /home/tdqg/.ssh/authorized_keys; mkdir -p /opt/tddb/tdqg/connector/tdqg-tdmle-connector/UDF; chown tdqg:querygrid /opt/tddb/tdqg/connector/tdqg-tdmle-connector/UDF"]
      env:
        - name: CONTAINER_NAME
          value: "sshdsidecar"
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      ports:
        - containerPort: 32222
      volumeMounts:
        - mountPath: /opt/tddb/tdqg
          name: qg-opt
        - mountPath: /etc/ssh/ssh_host_rsa_key
          readOnly: true
          subPath: ssh_host_rsa_key
          name: ssh-host-rsa-key
        - mountPath: /home/tdqg/.ssh/authorized_keys.d
          name: ssh-authorized-keys
        - mountPath: /etc/ssh/ssh_host_rsa_key.pub
          name: ssh-host-rsa-key-pub
          subPath: ssh_host_rsa_key.pub
    - name: cleanupdaemon
      resources:
        requests:
          memory: "{{ REQ_MEM_CLEANUPDAEMON }}"
          cpu: "{{ REQ_CPU_CLEANUPDAEMON }}"
      image: localregistryhost:localregistryport/cleanupdaemon:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "cleanupdaemon"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NON_TDAP_SCHEMAS
          value: "'public','nc_system'"
        - name: MAX_CLEANUP_WAIT_TIME_SECONDS
          value: "86400"
        - name: DROP_LEAKED_TABLES
          value: "true"
      ports:
        - containerPort: 2006
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace 
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: rum
      resources:
        requests:
          memory: "{{ REQ_MEM_RUM }}"
          cpu: "{{ REQ_CPU_RUM }}"
      image: localregistryhost:localregistryport/rum:localregistrytag
      env:
        - name: CONTAINER_NAME
          value: "rum"
        - name: FS_CHECKING_INTERVAL
          value: "30"
        - name: FS_REJECT_NEW_QUERIES_THRESHOLD 
          value: "80%"
        - name: FS_CANCEL_RUNNING_QUERIES_THRESHOLD
          value: "85%"
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      ports:
        - containerPort: 2195
      volumeMounts:
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
        - name: node-exporter-textfiledir
          mountPath: /var/log/prometheus_node_exporter
    - name: metasrv
      image: localregistryhost:localregistryport/metasrv:localregistrytag
      env:
        - name: WORKER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DOCKER_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSMAN_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      ports:
        - containerPort: 7091
      volumeMounts:
        - mountPath: /primary/tmp
          name: queen-tempspace
  initContainers:
    - name: securitysetup
      image: localregistryhost:localregistryport/setupcommon:localregistrytag
      volumeMounts:
        - name: security-credentials
          mountPath: "/home/beehive/config/security/credentials"
        - name: arc-client-credentials
          mountPath: /home/beehive/.postgresql
  imagePullSecrets:
    - name: regsecret
  nodeSelector:
    queen: qpod
  volumes:
    - name: queen-tempspace
      emptyDir: {}
    - name: local-tmp
      emptyDir: {}
    - name: shared-memory
      hostPath:
        path: /dev/shm/td_qg_ipc
    - name: qg-var
      hostPath:
        path: /var/opt/tddb/tdqg
    - name: qg-opt
      hostPath:
        path: /opt/tddb/tdqg
    - name: qg-tdconfig
      hostPath:
        path: /etc/opt/tddb/tdconfig/tdqg
    - name: etc-hostname
      hostPath:
        path: /etc/hostname
    - name: security-credentials
      projected:
        sources:
        - secret:
            name: arcserver
        - secret:
            name: arcclient
        - secret:
            name: iceserver
        - secret:
            name: configjson
    - name: arc-client-credentials
      emptyDir: {}
    - name: websrv-https-credentials
      secret:
         secretName: webservices
    - name: aster-amvdb
      hostPath:
        path: /var/opt/tddb/mle/cmdp/amvdb
    - name: aster-queendb
      hostPath:
        path: /var/opt/tddb/mle/cmdp/queendb
    - name: node-exporter-textfiledir
      hostPath:
        path: /var/log/prometheus_node_exporter
    - name: ssh-host-rsa-key
      secret:
        secretName: ssh-host-rsa-key
        defaultMode: 256
    - name: ssh-host-rsa-key-pub
      configMap:
        name: ssh-host-rsa-key-pub
        defaultMode: 420
    - name: ssh-authorized-keys
      configMap:
        name: ssh-authorized-keys
